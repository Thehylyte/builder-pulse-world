#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üì± Creating App Store Deployment Package...\n');

// Create deployment package directory
const packageDir = 'app-store-package';
const timestamp = new Date().toISOString().split('T')[0];
const fullPackageDir = `${packageDir}-${timestamp}`;

if (!fs.existsSync(fullPackageDir)) {
  fs.mkdirSync(fullPackageDir, { recursive: true });
}

// App metadata for deployment
const appMetadata = {
  name: "The Tent",
  displayName: "The Tent - VIP Festival Experience",
  bundleId: "club.thetent.app",
  version: "1.0.0",
  build: "1",
  category: "Lifestyle",
  description: "Exclusive VIP hospitality services for artists performing at major music festivals.",
  keywords: "music festival, VIP, hospitality, artist services, luxury, festival experience, concierge, entertainment",
  supportEmail: "hello@thetent.club",
  privacyPolicy: "https://thetent.club/privacy",
  termsOfService: "https://thetent.club/terms",
  website: "https://thetent.club",
  
  // App Store specific
  appStoreInfo: {
    primaryLanguage: "English (U.S.)",
    contentRating: "4+",
    pricing: "Free",
    availability: "All countries/regions",
    
    // Required screenshots sizes
    screenshotRequirements: {
      "iPhone 6.7": "1290 x 2796 pixels", // iPhone 14 Pro Max
      "iPhone 6.1": "1179 x 2556 pixels", // iPhone 14
      "iPhone 5.5": "1242 x 2208 pixels", // iPhone 8 Plus
      "iPad Pro 12.9": "2048 x 2732 pixels"
    }
  }
};

// Create app metadata file
fs.writeFileSync(
  path.join(fullPackageDir, 'app-metadata.json'),
  JSON.stringify(appMetadata, null, 2)
);

// Create deployment checklist
const deploymentChecklist = `# The Tent - App Store Deployment Checklist

## ‚úÖ Pre-Submission Checklist

### 1. App Identity
- [x] Bundle ID: club.thetent.app
- [x] App Name: The Tent
- [x] Display Name: The Tent - VIP Festival Experience
- [x] Version: 1.0.0
- [x] Build Number: 1

### 2. App Store Connect Setup
- [ ] Create app record in App Store Connect
- [ ] Configure app information
- [ ] Add app description and keywords
- [ ] Upload app icon (1024x1024px)
- [ ] Add screenshots (see requirements below)
- [ ] Set pricing (Free)
- [ ] Configure availability

### 3. Required Screenshots
- [ ] iPhone 6.7" (1290 x 2796): 3-10 screenshots
- [ ] iPhone 6.1" (1179 x 2556): 3-10 screenshots  
- [ ] iPhone 5.5" (1242 x 2208): 3-10 screenshots
- [ ] iPad Pro 12.9" (2048 x 2732): 3-10 screenshots

### 4. App Store Information
- [ ] App description (see app-store-description.txt)
- [ ] Keywords: ${appMetadata.keywords}
- [ ] Privacy Policy URL: ${appMetadata.privacyPolicy}
- [ ] Support URL: ${appMetadata.website}
- [ ] Marketing URL: ${appMetadata.website}

### 5. Build & Upload
- [ ] Open iOS project in Xcode
- [ ] Configure signing & provisioning
- [ ] Archive app (Product ‚Üí Archive)
- [ ] Upload to App Store Connect
- [ ] Submit for review

## üì± Next Steps

1. **Open the iOS project:**
   - Navigate to: ios/App/App.xcodeproj
   - Double-click to open in Xcode

2. **Configure signing:**
   - Select your Apple Developer Team
   - Enable "Automatically manage signing"

3. **Build & Archive:**
   - Select "Any iOS Device" or connected device
   - Product ‚Üí Archive
   - Upload to App Store Connect

## üìû Support
- Email: ${appMetadata.supportEmail}
- Website: ${appMetadata.website}

## ‚ö° Quick Commands
\`\`\`bash
# Build web app
npm run build:client

# Sync with iOS
npm run mobile:sync

# Open iOS project
npm run mobile:ios
\`\`\`
`;

fs.writeFileSync(path.join(fullPackageDir, 'DEPLOYMENT_CHECKLIST.md'), deploymentChecklist);

// Create App Store description
const appStoreDescription = `The Tent provides exclusive VIP hospitality services for artists performing at major music festivals.

üé™ PREMIUM FESTIVAL SERVICES
‚Ä¢ Priority access to exclusive amenities
‚Ä¢ Dedicated personal concierge services
‚Ä¢ Luxury grooming and wellness facilities
‚Ä¢ Private lounge access
‚Ä¢ Professional styling services
‚Ä¢ Seamless festival coordination

üéµ ARTIST-FOCUSED FEATURES
‚Ä¢ Easy registration and verification
‚Ä¢ Real-time service booking
‚Ä¢ Festival schedule management
‚Ä¢ Exclusive brand partnerships
‚Ä¢ Mobile-optimized dashboard

The Tent transforms your festival experience from stressful to seamless. Our white-glove service ensures you can focus on your performance while we handle everything else.

PERFECT FOR:
‚úì Touring musicians and artists
‚úì Festival performers
‚úì Music industry professionals
‚úì VIP festival experiences

Join the exclusive community of artists who trust The Tent for their festival hospitality needs.

UPCOMING FESTIVALS:
‚Ä¢ Lollapalooza - Chicago, IL
‚Ä¢ Riot Fest - Chicago, IL  
‚Ä¢ Sea.Hear.Now - Asbury Park, NJ
‚Ä¢ Country Calling - Ocean City, MD

Experience the difference that luxury hospitality makes. Download The Tent today and elevate your festival experience.`;

fs.writeFileSync(path.join(fullPackageDir, 'app-store-description.txt'), appStoreDescription);

// Create build instructions
const buildInstructions = `# iOS Build Instructions

## Prerequisites
1. macOS (required for iOS development)
2. Xcode 14+ (from Mac App Store)
3. Apple Developer Account ($99/year)

## Step-by-Step Build Process

### 1. Prepare the Project
\`\`\`bash
# Build the web application
npm run build:client

# Sync with iOS platform
npm run mobile:sync
\`\`\`

### 2. Open in Xcode
\`\`\`bash
# Open the iOS project
npm run mobile:ios
\`\`\`
Or manually open: \`ios/App/App.xcodeproj\`

### 3. Configure Project in Xcode

#### App Identity
- Bundle Identifier: \`club.thetent.app\`
- Display Name: \`The Tent\`
- Version: \`1.0.0\`
- Build: \`1\`

#### Signing & Capabilities
1. Select your Apple Developer Team
2. Enable "Automatically manage signing"
3. Ensure bundle ID matches your App Store Connect app

#### Deployment Info
- Deployment Target: iOS 13.0
- Supported Device Families: iPhone, iPad
- Supported Interface Orientations: Portrait

### 4. Build & Archive

1. **Select Build Target**
   - Choose "Any iOS Device (arm64)" or connected device
   - Do NOT use Simulator for App Store builds

2. **Archive the App**
   - Product ‚Üí Archive
   - Wait for build to complete

3. **Upload to App Store**
   - Window ‚Üí Organizer
   - Select your archive
   - Click "Distribute App"
   - Choose "App Store Connect"
   - Upload

### 5. App Store Connect

1. **Create App Record** (if not done)
   - Go to App Store Connect
   - My Apps ‚Üí + ‚Üí New App
   - Platform: iOS
   - Name: The Tent
   - Bundle ID: club.thetent.app

2. **Complete App Information**
   - Add app description
   - Upload screenshots
   - Set pricing (Free)
   - Add privacy policy URL

3. **Submit for Review**
   - Select your uploaded build
   - Complete all required fields
   - Submit for review

## Troubleshooting

### Common Issues
- **Signing errors**: Ensure Apple Developer account is active
- **Missing provisioning profile**: Let Xcode manage automatically
- **Build errors**: Clean build folder (Product ‚Üí Clean Build Folder)

### Support
- Apple Developer Documentation: https://developer.apple.com/documentation/
- App Store Review Guidelines: https://developer.apple.com/app-store/review/guidelines/
`;

fs.writeFileSync(path.join(fullPackageDir, 'BUILD_INSTRUCTIONS.md'), buildInstructions);

// Create icon requirements file
const iconRequirements = `# App Icon Requirements

## Required Sizes

### App Store
- **App Store Icon**: 1024√ó1024px (PNG, no transparency)

### iOS App Bundle
- **iPhone App**: 60√ó60px, 120√ó120px, 180√ó180px
- **iPad App**: 76√ó76px, 152√ó152px
- **App Store**: 1024√ó1024px
- **Spotlight**: 40√ó40px, 80√ó80px, 120√ó120px
- **Settings**: 29√ó29px, 58√ó58px, 87√ó87px

## Design Guidelines
- Use your SVG source: resources/icon.svg
- Ensure icon works at all sizes
- No transparency in final PNG files
- Follow Apple's Human Interface Guidelines

## Auto-Generation
Icons are automatically generated from resources/icon.svg when you run:
\`\`\`bash
npm run mobile:sync
\`\`\`

## Manual Generation
If you need to generate icons manually:
1. Export resources/icon.svg at 1024√ó1024px
2. Use online tools like appicon.co or Xcode's asset catalog
3. Replace files in ios/App/App/Assets.xcassets/AppIcon.appiconset/
`;

fs.writeFileSync(path.join(fullPackageDir, 'ICON_REQUIREMENTS.md'), iconRequirements);

// Copy essential files if they exist
const filesToCopy = [
  { src: 'capacitor.config.ts', dest: 'capacitor.config.ts' },
  { src: 'app-config.json', dest: 'app-config.json' },
  { src: 'resources/icon.svg', dest: 'resources/icon.svg' },
  { src: 'resources/splash.svg', dest: 'resources/splash.svg' },
  { src: 'MOBILE_APP.md', dest: 'MOBILE_APP.md' }
];

filesToCopy.forEach(file => {
  if (fs.existsSync(file.src)) {
    const destDir = path.dirname(path.join(fullPackageDir, file.dest));
    if (!fs.existsSync(destDir)) {
      fs.mkdirSync(destDir, { recursive: true });
    }
    fs.copyFileSync(file.src, path.join(fullPackageDir, file.dest));
    console.log(`‚úÖ Copied ${file.src}`);
  }
});

// Create ZIP preparation script
const zipScript = `#!/bin/bash
# Create downloadable ZIP package

PACKAGE_DIR="${fullPackageDir}"
ZIP_NAME="the-tent-appstore-${timestamp}.zip"

echo "üì¶ Creating ZIP package..."

if command -v zip &> /dev/null; then
    zip -r "\$ZIP_NAME" "\$PACKAGE_DIR"
    echo "‚úÖ Package created: \$ZIP_NAME"
    echo "üì≤ You can now download this file for App Store submission"
else
    echo "‚ùå ZIP command not found. Please manually compress the \$PACKAGE_DIR folder"
fi
`;

fs.writeFileSync(path.join(fullPackageDir, 'create-zip.sh'), zipScript);
fs.chmodSync(path.join(fullPackageDir, 'create-zip.sh'), 0o755);

// Create final README
const packageReadme = `# The Tent - App Store Deployment Package
Generated: ${new Date().toISOString()}

## üìÅ Package Contents

- \`app-metadata.json\` - Complete app information and metadata
- \`DEPLOYMENT_CHECKLIST.md\` - Step-by-step deployment checklist
- \`BUILD_INSTRUCTIONS.md\` - Detailed Xcode build instructions
- \`app-store-description.txt\` - Ready-to-use App Store description
- \`ICON_REQUIREMENTS.md\` - App icon specifications
- \`resources/\` - App icons and splash screens
- \`capacitor.config.ts\` - Mobile app configuration

## üöÄ Quick Start

1. **Build the app:**
   \`\`\`bash
   npm run build:client
   npm run mobile:sync
   \`\`\`

2. **Open iOS project:**
   \`\`\`bash
   npm run mobile:ios
   \`\`\`

3. **Follow the checklist:**
   Open \`DEPLOYMENT_CHECKLIST.md\` and follow each step

## üì± Your App Details

- **Name**: ${appMetadata.name}
- **Bundle ID**: ${appMetadata.bundleId}
- **Version**: ${appMetadata.version}
- **Category**: ${appMetadata.category}

## üìû Need Help?

- Email: ${appMetadata.supportEmail}
- Website: ${appMetadata.website}

Ready to submit to the App Store! üéâ
`;

fs.writeFileSync(path.join(fullPackageDir, 'README.md'), packageReadme);

console.log(`‚úÖ App Store deployment package created: ${fullPackageDir}/`);
console.log('\nüìã Package includes:');
console.log('   ‚Ä¢ Complete deployment checklist');
console.log('   ‚Ä¢ Step-by-step build instructions');
console.log('   ‚Ä¢ App Store description and metadata');
console.log('   ‚Ä¢ Icon requirements and assets');
console.log('   ‚Ä¢ Configuration files');

console.log('\nüöÄ Next steps:');
console.log(`   1. Review the contents of ${fullPackageDir}/`);
console.log('   2. Follow DEPLOYMENT_CHECKLIST.md');
console.log('   3. Open the iOS project with: npm run mobile:ios');
console.log('   4. Build and upload to App Store Connect');

console.log('\nüì¶ To create a ZIP for easy sharing:');
console.log(`   cd ${fullPackageDir} && ./create-zip.sh`);

console.log('\nüé™ Ready to launch The Tent on the App Store!');
